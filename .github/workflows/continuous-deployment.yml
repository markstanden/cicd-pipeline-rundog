name: "Continuous Deployment"

"on":
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-release:
    name: "Build frontend release artifact"
    uses: ./.github/workflows/frontend-build.yml
    permissions:
      contents: read
      actions: write
    with:
      dotnet-version: ${{ vars.DOTNET_VERSION }}
      node-version: ${{ vars.NODE_VERSION }}

  build-staging:
    name: "Build Staging Environment Infrastructure"
    uses: ./.github/workflows/infra-build.yml
    with:
      environment: "staging"
      backend-resource-group-name: ${{ vars.BACKEND_RG_STAGING }}
      backend-storage-account-name: ${{ vars.BACKEND_STORAGE_ACCOUNT_STAGING }}
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

  deploy-staging:
    needs: [
      "build-staging",
      "build-release"
    ]
    name: "Deploy Frontend to staging"
    uses: ./.github/workflows/frontend-deploy.yml
    permissions:
      contents: read
      actions: read
    with:
      environment: "staging"
      artifact-name: ${{ needs.build-release.outputs.artifact-name }}
      infrastructure-outputs-artifact-name: ${{ needs.build-staging.outputs.artifact-name }}

  test-staging:
    needs: "deploy-staging"
    name: "Run Staging Healthcheck"
    uses:  ./.github/workflows/frontend-test.yml
    with:
      environment: "staging"
      base-url: ${{ needs.deploy-staging.outputs.deployment-url }}
      dotnet-version: ${{ vars.DOTNET_VERSION }}

  build-prod:
    needs: "test-staging"
    name: "Build Production Environment Infrastructure"
    uses: ./.github/workflows/infra-build.yml
    with:
      environment: "production"
      backend-resource-group-name: ${{ vars.BACKEND_RG_PROD }}
      backend-storage-account-name: ${{ vars.BACKEND_STORAGE_ACCOUNT_PROD }}
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

  deploy-prod:
    needs: [
      "build-frontend-release",
      "build-prod"
    ]
    name: "Deploy Frontend to staging"
    uses: ./.github/workflows/frontend-deploy.yml
    permissions:
      contents: read
      actions: read
    with:
      environment: "production"
      artifact-name: ${{ needs.build-release.outputs.artifact-name }}
      infrastructure-outputs-artifact-name: ${{ needs.build-prod.outputs.artifact-name }}

  test-prod:
    needs: "build-prod"
    name: "Test Production"
    uses:  ./.github/workflows/frontend-test.yml
    with:
      environment: "production"
      base-url: ${{ needs.deploy-prod.outputs.deployment-url }}
      dotnet-version: ${{ vars.DOTNET_VERSION }}

#  destroy-staging:
#    needs: [ "test-prod" ]
#    if: >
#      needs.run-staging-acceptance-tests.result == 'success' &&
#      needs.production-frontend-deploy.result == 'success'
#    name: "Auto Destroy Staging Environment"
#    uses: markstanden/coding-standards/.github/workflows/opentofu-destroy-workspace.yml@main
#    with:
#      opentofu-version: ${{ vars.OPENTOFU_VERSION }}
#      infrastructure-directory: "./infrastructure"
#      environment: "staging"
#      project-name: "rundog"
#      backend-resource-group-name: ${{ vars.BACKEND_RG_STAGING }}
#      backend-storage-account-name: ${{ vars.BACKEND_STORAGE_ACCOUNT_STAGING }}
#    secrets:
#      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
