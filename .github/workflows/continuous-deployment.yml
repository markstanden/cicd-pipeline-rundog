name: "Continuous Deployment"

on:
  workflow_dispatch:
    inputs:
      debug-output:
        description: "Enable verbose debug output to aid troubleshooting"
        type: boolean
        required: false
        default: false

  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # ============================================
  # Code Quality
  # ============================================
  test-repo:
    name: "Test Repo"
    uses: ./.github/workflows/repo-test.yml
    with:
      dotnet-version: ${{ vars.DOTNET_VERSION }}
      sonar-project-key: ${{ vars.SONAR_PROJECT_KEY }}
      sonar-org: ${{ vars.SONAR_ORGANIZATION }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}
    secrets:
      sonar-token: ${{ secrets.SONAR_TOKEN }}

  # ============================================
  # Build Artifacts
  # ============================================
  build-release:
    name: "Build Release"
    needs: "test-repo"
    permissions:
      contents: read
      actions: write
    uses: ./.github/workflows/frontend-build.yml
    with:
      dotnet-version: ${{ vars.DOTNET_VERSION }}
      node-version: ${{ vars.NODE_VERSION }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}

  # ============================================
  # Staging Deployment
  # ============================================
  build-staging:
    name: "Build Staging Infra"
    needs: "test-repo"
    permissions:
      contents: read
      actions: write
    uses: ./.github/workflows/infra-build.yml
    with:
      environment: "staging"
      backend-resource-group-name: ${{ vars.BACKEND_RG_STAGING }}
      backend-storage-account-name: ${{ vars.BACKEND_STORAGE_ACCOUNT_STAGING }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

  deploy-staging:
    name: "Deploy Staging"
    needs: ["build-release", "build-staging"]
    permissions:
      contents: read
      actions: read
    uses: ./.github/workflows/frontend-deploy.yml
    with:
      environment: "staging"
      frontend-artifact-name: ${{ needs.build-release.outputs.artifact-name }}
      infrastructure-outputs-artifact-name: ${{ needs.build-staging.outputs.artifact-name }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}

  test-staging:
    name: "Test Staging"
    needs: deploy-staging
    uses: ./.github/workflows/frontend-test.yml
    with:
      environment: "staging"
      base-url: ${{ needs.deploy-staging.outputs.deployment-url }}
      dotnet-version: ${{ vars.DOTNET_VERSION }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}

  # ============================================
  # Production Deployment
  # ============================================
  build-prod:
    name: "Build Production Infra"
    needs: test-staging
    permissions:
      contents: read
      actions: write
    uses: ./.github/workflows/infra-build.yml
    with:
      environment: "production"
      backend-resource-group-name: ${{ vars.BACKEND_RG_PROD }}
      backend-storage-account-name: ${{ vars.BACKEND_STORAGE_ACCOUNT_PROD }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

  deploy-prod:
    name: "Deploy Production"
    needs: ["build-release", "build-prod"]
    permissions:
      contents: read
      actions: read
    uses: ./.github/workflows/frontend-deploy.yml
    with:
      environment: "production"
      frontend-artifact-name: ${{ needs.build-release.outputs.artifact-name }}
      infrastructure-outputs-artifact-name: ${{ needs.build-prod.outputs.artifact-name }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}

  test-prod:
    name: "Test Production"
    needs: deploy-prod
    uses: ./.github/workflows/frontend-test.yml
    with:
      environment: "production"
      base-url: ${{ needs.deploy-prod.outputs.deployment-url }}
      dotnet-version: ${{ vars.DOTNET_VERSION }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}

  # ============================================
  # Cleanup
  # ============================================
  destroy-staging:
    name: "Destroy Staging"
    if: >
      needs.test-staging.result == 'success' &&
      needs.test-prod.result == 'success'
    needs: ["test-staging", "test-prod"]
    uses: ./.github/workflows/infra-destroy.yml
    with:
      environment: "staging"
      backend-resource-group-name: ${{ vars.BACKEND_RG_STAGING }}
      backend-storage-account-name: ${{ vars.BACKEND_STORAGE_ACCOUNT_STAGING }}
      debug-output: ${{ vars.PIPELINE_DEBUG_MODE == 'true' || inputs.debug-output || false }}
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
